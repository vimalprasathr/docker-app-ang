###########################
# Security Hardening      #
###########################

# Include this file in the main config file

# Security Through Obscurity
## Disable server signature
ServerSignature Off
## Configures the Server HTTP response header
ServerTokens Prod
## Disable the HTTP TRACE request method
TraceEnable off

# DoS attacks mitigations
Timeout 60

# Request Limits
#LimitRequestline 512
#LimitRequestFieldsize 1024
#LimitRequestBody 102400

# Disallow old versions of HTTP (1.0 and prior)
RewriteEngine On
RewriteCond %{THE_REQUEST} !HTTP/1\.1$
RewriteRule .* - [F]


# Ensure IP Address Based Requests Are Disallowed
#RewriteCond %{HTTP_HOST} !^nmc\.gsstvl\.in [NC]
#RewriteCond %{REQUEST_URI} !^/error [NC]
#RewriteRule ^.(.*) - [L,F]

# Block known bad User-Agents
# RewriteCond %{HTTP_USER_AGENT} ^.*(python|ruby|Java|perl|Go-http-client|libwww|php-requests|PHP-Curl|okhttp|curl|PycURL|wget|scrapy).*$ [NC,OR]
RewriteCond %{HTTP_USER_AGENT} ^.*(masscan|zgrab|ZmEu|Nikto|sqlmap|Morfeus\ Fucking\ Scanner|Mr.4x3|Sun\ Web\ Console\ Fingerprinter).*$ [NC,OR]
RewriteCond %{HTTP_USER_AGENT} ^.*Hello,\ World.*$ [NC]
RewriteRule . - [F,L]

# Security Headers
<IfModule mod_headers.c>
        ## Unset headers
        ### Server-side technology information
        Header always unset X-Powered-By

        # Set common security headers

        # Frame Options - Protect website against clickjacking. The example below sends the `X-Frame-Options` response header with the value `DENY`, informing browsers not to display the content of the web page in any frame.
        # This might not be the best setting for everyone. You should read about the other two possible values the `X-Frame-Options` header field can have: `SAMEORIGIN` and `ALLOW-FROM`.
        Header always set X-Frame-Options "SAMEORIGIN"

        # Cross-Site Scripting (XSS) Protection
        Header set X-XSS-Protection "1; mode=block"

        # Content Type Options - Prevent some browsers from MIME-sniffing the response.
        Header set X-Content-Type-Options nosniff

        # Content Security Policy (CSP)
        Header always set Content-Security-Policy "default-src http: data: 'unsafe-inline' 'unsafe-eval'"

        # Referrer Policy
        Header always set Referrer-Policy "no-referrer"

        # Browser features
        # Header set Feature-Policy: camera: 'none'; vr: 'none'; microphone: 'none';  payment: 'none'; midi: 'none'; microphone: 'none'

        # Cookies
        # Header edit Set-Cookie ^(.*)$ $1;HttpOnly;Secure

        # HTTP Strict Transport Security (HSTS)
        ## Header always set Strict-Transport-Security "max-age=16070400; includeSubDomains" "expr=%{HTTPS} == 'on'"
	### Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" "expr=%{HTTPS} == 'on'"
        ### Header set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

        # Allow cross-origin requests - FOR DEBUG ONLY
        # Header set Access-Control-Allow-Origin "*"

</IfModule>

# File access

## Block access to directories without a default document.
<IfModule mod_autoindex.c>
    Options -Indexes
</IfModule>

## Block access to all hidden files and directories.
<IfModule mod_rewrite.c>
        RewriteEngine On
	RewriteOptions Inherit
        ## Exception for the visible content from within the `/.well-known/` hidden directory
        RewriteCond %{REQUEST_URI} "!(^|/)\.well-known/([^./]+./?)+$" [NC]
        ## Block access to "hidden" directories whose names begin with a period
	RewriteCond %{SCRIPT_FILENAME} -d [OR]
        ## RewriteCond %{SCRIPT_FILENAME} -d
        RewriteCond %{SCRIPT_FILENAME} -f
	RewriteRule "(^|/)\." - [F]
</IfModule>

## Block access to files that can expose sensitive information (backup and source code)
<IfModule mod_authz_core.c>
    <FilesMatch "(^#.*#|\.(bak|conf|dist|fla|in[ci]|log|orig|psd|sh|sql|sw[op])|~)$">
        Require all denied
    </FilesMatch>
</IfModule>